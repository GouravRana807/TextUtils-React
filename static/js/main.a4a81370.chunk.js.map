{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","document","getSelection","removeAllRanges","split","join","filter","element","defaultProps","aboutText","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","cls","body","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a4a81370.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <div className=\"d-flex\">\r\n            <div\r\n              className=\"bg-primary rounded mx-2\"\r\n              onClick={() => props.toggleMode('primary')}\r\n              style={{\r\n                height: '30px',\r\n                width: '30px',\r\n                cursor: 'pointer',\r\n                border: '1px solid black',\r\n              }}\r\n            ></div>\r\n            <div\r\n              className=\"bg-danger rounded mx-2\"\r\n              onClick={() => props.toggleMode('danger')}\r\n              style={{\r\n                height: '30px',\r\n                width: '30px',\r\n                cursor: 'pointer',\r\n                border: '1px solid black',\r\n              }}\r\n            ></div>\r\n            <div\r\n              className=\"bg-success rounded mx-2\"\r\n              onClick={() => props.toggleMode('success')}\r\n              style={{\r\n                height: '30px',\r\n                width: '30px',\r\n                cursor: 'pointer',\r\n                border: '1px solid black',\r\n              }}\r\n            ></div>\r\n            <div\r\n              className=\"bg-warning rounded mx-2\"\r\n              onClick={() => props.toggleMode('warning')}\r\n              style={{\r\n                height: '30px',\r\n                width: '30px',\r\n                cursor: 'pointer',\r\n                border: '1px solid black',\r\n              }}\r\n            ></div>\r\n            <div\r\n              className=\"bg-light rounded mx-2\"\r\n              onClick={() => props.toggleMode('light')}\r\n              style={{\r\n                height: '30px',\r\n                width: '30px',\r\n                cursor: 'pointer',\r\n                border: '1px solid black',\r\n              }}\r\n            ></div>\r\n            <div\r\n              className=\"bg-dark rounded mx-2\"\r\n              onClick={() => props.toggleMode('dark')}\r\n              style={{\r\n                height: '30px',\r\n                width: '30px',\r\n                cursor: 'pointer',\r\n                border: '1px solid black',\r\n              }}\r\n            ></div>\r\n          </div> */}\r\n\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === 'light' ? 'dark' : 'light'\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={() => {\r\n                props.toggleMode(null);\r\n              }}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckboxDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About ',\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log('Uppercase was clicked' + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert('Converted to uppercase', 'success');\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert('Converted to lowercase', 'success');\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert('Text Cleared', 'success');\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert('Copied to Clipboard!', 'success');\r\n  };\r\n\r\n  const handleExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(' '));\r\n    props.showAlert('Extra spaces removed!', 'success');\r\n  };\r\n\r\n  const handleBold = () => {\r\n    let newText = text;\r\n    setText(newText);\r\n    props.showAlert('Converted to boldcase', 'success');\r\n  };\r\n\r\n  const [text, setText] = useState('');\r\n  // setText('new text');\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}\r\n      >\r\n        <h1 className=\"mb-4\">{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',\r\n              color: props.mode === 'dark' ? 'white' : '#042743',\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleLoClick}\r\n        >\r\n          Convert to lowercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleClearClick}\r\n        >\r\n          clear Text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleExtraSpace}\r\n        >\r\n          Remove Extra Space\r\n        </button>\r\n\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleBold}\r\n        >\r\n          Remove bold Space\r\n        </button>\r\n\r\n        <div\r\n          disabled={text.length === 0}\r\n          className=\"container my-3\"\r\n          style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}\r\n        >\r\n          <h2>Your text summary</h2>\r\n          <p>\r\n            {\r\n              text.split(/\\s+/).filter((element) => {\r\n                return element.length !== 0;\r\n              }).length\r\n            }{' '}\r\n            words and {text.length} characters\r\n          </p>\r\n          {/* <p>{0.008 * text.split(' ').length - 1} Minutes read</p> */}\r\n          <p>\r\n            {0.008 *\r\n              text.split(' ').filter((element) => {\r\n                return element.length !== 0;\r\n              }).length}{' '}\r\n            Minutes read\r\n          </p>\r\n          <h2>Preview</h2>\r\n          <p>{text.length > 0 ? text : 'Nothing to preview'}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    <div style={{ height: '50px' }}>\r\n      {props.alert && (\r\n        // vs code own modifies\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","// import { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App(){\n  const [mode, setMode] = useState('light');//whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  }\n\n  const removeBodyClasses =()=>{\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n    document.body.classList.remove('bg-warning')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-success')\n  }\n\nconst toggleMode = (cls)=>{\n  removeBodyClasses();\n  document.body.classList.add('bg-'+cls)\n  if(mode === 'light'){\n    setMode('dark');\n    document.body.style.backgroundColor = '#042743';\n    showAlert(\"Dark mode has been enabled\", \"success\")\n    // document.title =' TextUtils - Dark Mode'\n  }\n  \n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode has been enabled\", \"success\")\n    // document.title =' TextUtils - light Mode'\n\n  }\n} \n  return (\n    <>\n  {/* <Router> */}\n{/* <Navbar /> */}\n<Navbar title = \"TextUtils\" mode={mode} toggleMode={toggleMode} />\n<Alert alert= {alert}/>\n<div className=\"container my-3\">\n{/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n      <TextForm showAlert={showAlert} heading = \" Try TextUtils - Word Counter, Character, Remove extra spaces\"  mode={mode}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n</div>\n  {/* </Router> */}\n\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}